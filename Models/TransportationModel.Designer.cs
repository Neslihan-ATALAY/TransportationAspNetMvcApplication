//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("TransportationDatabaseModel", "FK_ADDRESS_CITY", "CITY", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TransportationMvc2Project.Models.CITY), "ADDRESS", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TransportationMvc2Project.Models.ADDRESS), true)]
[assembly: EdmRelationshipAttribute("TransportationDatabaseModel", "FK_ADDRESS_DISTRICT", "DISTRICT", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TransportationMvc2Project.Models.DISTRICT), "ADDRESS", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TransportationMvc2Project.Models.ADDRESS), true)]
[assembly: EdmRelationshipAttribute("TransportationDatabaseModel", "FK_APPLICATION_TRANSPORTTYPE", "TRANSPORTTYPE", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TransportationMvc2Project.Models.TRANSPORTTYPE), "APPLICATION", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TransportationMvc2Project.Models.APPLICATION), true)]
[assembly: EdmRelationshipAttribute("TransportationDatabaseModel", "FK_APPLICATION_USER", "USER", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TransportationMvc2Project.Models.USER), "APPLICATION", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TransportationMvc2Project.Models.APPLICATION), true)]
[assembly: EdmRelationshipAttribute("TransportationDatabaseModel", "FK_APPLICATION_VEHICLE_APPLICATION", "APPLICATION", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TransportationMvc2Project.Models.APPLICATION), "APPLICATION_VEHICLE", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TransportationMvc2Project.Models.APPLICATION_VEHICLE), true)]
[assembly: EdmRelationshipAttribute("TransportationDatabaseModel", "FK_COMMENT_APPLICATION", "APPLICATION", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TransportationMvc2Project.Models.APPLICATION), "COMMENT", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TransportationMvc2Project.Models.COMMENT), true)]
[assembly: EdmRelationshipAttribute("TransportationDatabaseModel", "FK_APPLICATION_VEHICLE_VEHICLE", "VEHICLE", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TransportationMvc2Project.Models.VEHICLE), "APPLICATION_VEHICLE", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TransportationMvc2Project.Models.APPLICATION_VEHICLE), true)]
[assembly: EdmRelationshipAttribute("TransportationDatabaseModel", "FK_EMPLOYEE_COMPANY", "COMPANY", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TransportationMvc2Project.Models.COMPANY), "EMPLOYEE", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TransportationMvc2Project.Models.EMPLOYEE), true)]
[assembly: EdmRelationshipAttribute("TransportationDatabaseModel", "FK_VEHICLE_COMPANY", "COMPANY", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TransportationMvc2Project.Models.COMPANY), "VEHICLE", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TransportationMvc2Project.Models.VEHICLE), true)]
[assembly: EdmRelationshipAttribute("TransportationDatabaseModel", "FK_VEHICLE_EMPLOYEE_EMPLOYEE", "EMPLOYEE", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TransportationMvc2Project.Models.EMPLOYEE), "VEHICLE_EMPLOYEE", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TransportationMvc2Project.Models.VEHICLE_EMPLOYEE), true)]
[assembly: EdmRelationshipAttribute("TransportationDatabaseModel", "FK_VEHICLE_EMPLOYEE_VEHICLE", "VEHICLE", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TransportationMvc2Project.Models.VEHICLE), "VEHICLE_EMPLOYEE", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TransportationMvc2Project.Models.VEHICLE_EMPLOYEE), true)]
[assembly: EdmRelationshipAttribute("TransportationDatabaseModel", "FK_VEHICLE_VEHICLETYPE", "VEHICLETYPE", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TransportationMvc2Project.Models.VEHICLETYPE), "VEHICLE", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TransportationMvc2Project.Models.VEHICLE), true)]
[assembly: EdmRelationshipAttribute("TransportationDatabaseModel", "FK_VEHICLE_TRANSPORTTYPE", "TRANSPORTTYPE", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TransportationMvc2Project.Models.TRANSPORTTYPE), "VEHICLE", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TransportationMvc2Project.Models.VEHICLE), true)]
[assembly: EdmRelationshipAttribute("TransportationDatabaseModel", "FK_EMPLOYEE_EMPLOYEETYPE", "EMPLOYEETYPE", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TransportationMvc2Project.Models.EMPLOYEETYPE), "EMPLOYEE", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TransportationMvc2Project.Models.EMPLOYEE), true)]
[assembly: EdmRelationshipAttribute("TransportationDatabaseModel", "FK_COMPANY_ROLE", "ROLE", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TransportationMvc2Project.Models.ROLE), "COMPANY", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TransportationMvc2Project.Models.COMPANY), true)]
[assembly: EdmRelationshipAttribute("TransportationDatabaseModel", "FK_USER_ROLE", "ROLE", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TransportationMvc2Project.Models.ROLE), "USER", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TransportationMvc2Project.Models.USER), true)]

#endregion

namespace TransportationMvc2Project.Models
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class TransportationDatabaseEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new TransportationDatabaseEntities object using the connection string found in the 'TransportationDatabaseEntities' section of the application configuration file.
        /// </summary>
        public TransportationDatabaseEntities() : base("name=TransportationDatabaseEntities", "TransportationDatabaseEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new TransportationDatabaseEntities object.
        /// </summary>
        public TransportationDatabaseEntities(string connectionString) : base(connectionString, "TransportationDatabaseEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new TransportationDatabaseEntities object.
        /// </summary>
        public TransportationDatabaseEntities(EntityConnection connection) : base(connection, "TransportationDatabaseEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ADDRESS> ADDRESSes
        {
            get
            {
                if ((_ADDRESSes == null))
                {
                    _ADDRESSes = base.CreateObjectSet<ADDRESS>("ADDRESSes");
                }
                return _ADDRESSes;
            }
        }
        private ObjectSet<ADDRESS> _ADDRESSes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<APPLICATION> APPLICATIONs
        {
            get
            {
                if ((_APPLICATIONs == null))
                {
                    _APPLICATIONs = base.CreateObjectSet<APPLICATION>("APPLICATIONs");
                }
                return _APPLICATIONs;
            }
        }
        private ObjectSet<APPLICATION> _APPLICATIONs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<APPLICATION_VEHICLE> APPLICATION_VEHICLE
        {
            get
            {
                if ((_APPLICATION_VEHICLE == null))
                {
                    _APPLICATION_VEHICLE = base.CreateObjectSet<APPLICATION_VEHICLE>("APPLICATION_VEHICLE");
                }
                return _APPLICATION_VEHICLE;
            }
        }
        private ObjectSet<APPLICATION_VEHICLE> _APPLICATION_VEHICLE;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CITY> CITies
        {
            get
            {
                if ((_CITies == null))
                {
                    _CITies = base.CreateObjectSet<CITY>("CITies");
                }
                return _CITies;
            }
        }
        private ObjectSet<CITY> _CITies;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<COMMENT> COMMENTs
        {
            get
            {
                if ((_COMMENTs == null))
                {
                    _COMMENTs = base.CreateObjectSet<COMMENT>("COMMENTs");
                }
                return _COMMENTs;
            }
        }
        private ObjectSet<COMMENT> _COMMENTs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<COMPANY> COMPANies
        {
            get
            {
                if ((_COMPANies == null))
                {
                    _COMPANies = base.CreateObjectSet<COMPANY>("COMPANies");
                }
                return _COMPANies;
            }
        }
        private ObjectSet<COMPANY> _COMPANies;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DISTRICT> DISTRICTs
        {
            get
            {
                if ((_DISTRICTs == null))
                {
                    _DISTRICTs = base.CreateObjectSet<DISTRICT>("DISTRICTs");
                }
                return _DISTRICTs;
            }
        }
        private ObjectSet<DISTRICT> _DISTRICTs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EMPLOYEE> EMPLOYEEs
        {
            get
            {
                if ((_EMPLOYEEs == null))
                {
                    _EMPLOYEEs = base.CreateObjectSet<EMPLOYEE>("EMPLOYEEs");
                }
                return _EMPLOYEEs;
            }
        }
        private ObjectSet<EMPLOYEE> _EMPLOYEEs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TRANSPORTTYPE> TRANSPORTTYPEs
        {
            get
            {
                if ((_TRANSPORTTYPEs == null))
                {
                    _TRANSPORTTYPEs = base.CreateObjectSet<TRANSPORTTYPE>("TRANSPORTTYPEs");
                }
                return _TRANSPORTTYPEs;
            }
        }
        private ObjectSet<TRANSPORTTYPE> _TRANSPORTTYPEs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<USER> USERs
        {
            get
            {
                if ((_USERs == null))
                {
                    _USERs = base.CreateObjectSet<USER>("USERs");
                }
                return _USERs;
            }
        }
        private ObjectSet<USER> _USERs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<VEHICLE> VEHICLEs
        {
            get
            {
                if ((_VEHICLEs == null))
                {
                    _VEHICLEs = base.CreateObjectSet<VEHICLE>("VEHICLEs");
                }
                return _VEHICLEs;
            }
        }
        private ObjectSet<VEHICLE> _VEHICLEs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<VEHICLE_EMPLOYEE> VEHICLE_EMPLOYEE
        {
            get
            {
                if ((_VEHICLE_EMPLOYEE == null))
                {
                    _VEHICLE_EMPLOYEE = base.CreateObjectSet<VEHICLE_EMPLOYEE>("VEHICLE_EMPLOYEE");
                }
                return _VEHICLE_EMPLOYEE;
            }
        }
        private ObjectSet<VEHICLE_EMPLOYEE> _VEHICLE_EMPLOYEE;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<VEHICLETYPE> VEHICLETYPEs
        {
            get
            {
                if ((_VEHICLETYPEs == null))
                {
                    _VEHICLETYPEs = base.CreateObjectSet<VEHICLETYPE>("VEHICLETYPEs");
                }
                return _VEHICLETYPEs;
            }
        }
        private ObjectSet<VEHICLETYPE> _VEHICLETYPEs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EMPLOYEETYPE> EMPLOYEETYPEs
        {
            get
            {
                if ((_EMPLOYEETYPEs == null))
                {
                    _EMPLOYEETYPEs = base.CreateObjectSet<EMPLOYEETYPE>("EMPLOYEETYPEs");
                }
                return _EMPLOYEETYPEs;
            }
        }
        private ObjectSet<EMPLOYEETYPE> _EMPLOYEETYPEs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ROLE> ROLEs
        {
            get
            {
                if ((_ROLEs == null))
                {
                    _ROLEs = base.CreateObjectSet<ROLE>("ROLEs");
                }
                return _ROLEs;
            }
        }
        private ObjectSet<ROLE> _ROLEs;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ADDRESSes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToADDRESSes(ADDRESS aDDRESS)
        {
            base.AddObject("ADDRESSes", aDDRESS);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the APPLICATIONs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAPPLICATIONs(APPLICATION aPPLICATION)
        {
            base.AddObject("APPLICATIONs", aPPLICATION);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the APPLICATION_VEHICLE EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAPPLICATION_VEHICLE(APPLICATION_VEHICLE aPPLICATION_VEHICLE)
        {
            base.AddObject("APPLICATION_VEHICLE", aPPLICATION_VEHICLE);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CITies EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCITies(CITY cITY)
        {
            base.AddObject("CITies", cITY);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the COMMENTs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCOMMENTs(COMMENT cOMMENT)
        {
            base.AddObject("COMMENTs", cOMMENT);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the COMPANies EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCOMPANies(COMPANY cOMPANY)
        {
            base.AddObject("COMPANies", cOMPANY);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DISTRICTs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDISTRICTs(DISTRICT dISTRICT)
        {
            base.AddObject("DISTRICTs", dISTRICT);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EMPLOYEEs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEMPLOYEEs(EMPLOYEE eMPLOYEE)
        {
            base.AddObject("EMPLOYEEs", eMPLOYEE);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TRANSPORTTYPEs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTRANSPORTTYPEs(TRANSPORTTYPE tRANSPORTTYPE)
        {
            base.AddObject("TRANSPORTTYPEs", tRANSPORTTYPE);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the USERs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUSERs(USER uSER)
        {
            base.AddObject("USERs", uSER);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the VEHICLEs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToVEHICLEs(VEHICLE vEHICLE)
        {
            base.AddObject("VEHICLEs", vEHICLE);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the VEHICLE_EMPLOYEE EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToVEHICLE_EMPLOYEE(VEHICLE_EMPLOYEE vEHICLE_EMPLOYEE)
        {
            base.AddObject("VEHICLE_EMPLOYEE", vEHICLE_EMPLOYEE);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the VEHICLETYPEs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToVEHICLETYPEs(VEHICLETYPE vEHICLETYPE)
        {
            base.AddObject("VEHICLETYPEs", vEHICLETYPE);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EMPLOYEETYPEs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEMPLOYEETYPEs(EMPLOYEETYPE eMPLOYEETYPE)
        {
            base.AddObject("EMPLOYEETYPEs", eMPLOYEETYPE);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ROLEs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToROLEs(ROLE rOLE)
        {
            base.AddObject("ROLEs", rOLE);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TransportationDatabaseModel", Name="ADDRESS")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ADDRESS : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ADDRESS object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static ADDRESS CreateADDRESS(global::System.Int32 id)
        {
            ADDRESS aDDRESS = new ADDRESS();
            aDDRESS.ID = id;
            return aDDRESS;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CITYID
        {
            get
            {
                return _CITYID;
            }
            set
            {
                OnCITYIDChanging(value);
                ReportPropertyChanging("CITYID");
                _CITYID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CITYID");
                OnCITYIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CITYID;
        partial void OnCITYIDChanging(Nullable<global::System.Int32> value);
        partial void OnCITYIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TOWN
        {
            get
            {
                return _TOWN;
            }
            set
            {
                OnTOWNChanging(value);
                ReportPropertyChanging("TOWN");
                _TOWN = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TOWN");
                OnTOWNChanged();
            }
        }
        private global::System.String _TOWN;
        partial void OnTOWNChanging(global::System.String value);
        partial void OnTOWNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DISTRICTID
        {
            get
            {
                return _DISTRICTID;
            }
            set
            {
                OnDISTRICTIDChanging(value);
                ReportPropertyChanging("DISTRICTID");
                _DISTRICTID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DISTRICTID");
                OnDISTRICTIDChanged();
            }
        }
        private Nullable<global::System.Int32> _DISTRICTID;
        partial void OnDISTRICTIDChanging(Nullable<global::System.Int32> value);
        partial void OnDISTRICTIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NEIGHBOURHOOD
        {
            get
            {
                return _NEIGHBOURHOOD;
            }
            set
            {
                OnNEIGHBOURHOODChanging(value);
                ReportPropertyChanging("NEIGHBOURHOOD");
                _NEIGHBOURHOOD = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NEIGHBOURHOOD");
                OnNEIGHBOURHOODChanged();
            }
        }
        private global::System.String _NEIGHBOURHOOD;
        partial void OnNEIGHBOURHOODChanging(global::System.String value);
        partial void OnNEIGHBOURHOODChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String STREET
        {
            get
            {
                return _STREET;
            }
            set
            {
                OnSTREETChanging(value);
                ReportPropertyChanging("STREET");
                _STREET = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("STREET");
                OnSTREETChanged();
            }
        }
        private global::System.String _STREET;
        partial void OnSTREETChanging(global::System.String value);
        partial void OnSTREETChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HOMESTREET
        {
            get
            {
                return _HOMESTREET;
            }
            set
            {
                OnHOMESTREETChanging(value);
                ReportPropertyChanging("HOMESTREET");
                _HOMESTREET = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("HOMESTREET");
                OnHOMESTREETChanged();
            }
        }
        private global::System.String _HOMESTREET;
        partial void OnHOMESTREETChanging(global::System.String value);
        partial void OnHOMESTREETChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> BUILDINGNO
        {
            get
            {
                return _BUILDINGNO;
            }
            set
            {
                OnBUILDINGNOChanging(value);
                ReportPropertyChanging("BUILDINGNO");
                _BUILDINGNO = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BUILDINGNO");
                OnBUILDINGNOChanged();
            }
        }
        private Nullable<global::System.Int32> _BUILDINGNO;
        partial void OnBUILDINGNOChanging(Nullable<global::System.Int32> value);
        partial void OnBUILDINGNOChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> INNERDOORNO
        {
            get
            {
                return _INNERDOORNO;
            }
            set
            {
                OnINNERDOORNOChanging(value);
                ReportPropertyChanging("INNERDOORNO");
                _INNERDOORNO = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("INNERDOORNO");
                OnINNERDOORNOChanged();
            }
        }
        private Nullable<global::System.Int32> _INNERDOORNO;
        partial void OnINNERDOORNOChanging(Nullable<global::System.Int32> value);
        partial void OnINNERDOORNOChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TransportationDatabaseModel", "FK_ADDRESS_CITY", "CITY")]
        public CITY CITY
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CITY>("TransportationDatabaseModel.FK_ADDRESS_CITY", "CITY").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CITY>("TransportationDatabaseModel.FK_ADDRESS_CITY", "CITY").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CITY> CITYReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CITY>("TransportationDatabaseModel.FK_ADDRESS_CITY", "CITY");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CITY>("TransportationDatabaseModel.FK_ADDRESS_CITY", "CITY", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TransportationDatabaseModel", "FK_ADDRESS_DISTRICT", "DISTRICT")]
        public DISTRICT DISTRICT
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DISTRICT>("TransportationDatabaseModel.FK_ADDRESS_DISTRICT", "DISTRICT").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DISTRICT>("TransportationDatabaseModel.FK_ADDRESS_DISTRICT", "DISTRICT").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DISTRICT> DISTRICTReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DISTRICT>("TransportationDatabaseModel.FK_ADDRESS_DISTRICT", "DISTRICT");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DISTRICT>("TransportationDatabaseModel.FK_ADDRESS_DISTRICT", "DISTRICT", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TransportationDatabaseModel", Name="APPLICATION")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class APPLICATION : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new APPLICATION object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static APPLICATION CreateAPPLICATION(global::System.Int32 id)
        {
            APPLICATION aPPLICATION = new APPLICATION();
            aPPLICATION.ID = id;
            return aPPLICATION;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> USERID
        {
            get
            {
                return _USERID;
            }
            set
            {
                OnUSERIDChanging(value);
                ReportPropertyChanging("USERID");
                _USERID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("USERID");
                OnUSERIDChanged();
            }
        }
        private Nullable<global::System.Int32> _USERID;
        partial void OnUSERIDChanging(Nullable<global::System.Int32> value);
        partial void OnUSERIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TRANSPORTTYPEID
        {
            get
            {
                return _TRANSPORTTYPEID;
            }
            set
            {
                OnTRANSPORTTYPEIDChanging(value);
                ReportPropertyChanging("TRANSPORTTYPEID");
                _TRANSPORTTYPEID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TRANSPORTTYPEID");
                OnTRANSPORTTYPEIDChanged();
            }
        }
        private Nullable<global::System.Int32> _TRANSPORTTYPEID;
        partial void OnTRANSPORTTYPEIDChanging(Nullable<global::System.Int32> value);
        partial void OnTRANSPORTTYPEIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> TRANSPORTDATE
        {
            get
            {
                return _TRANSPORTDATE;
            }
            set
            {
                OnTRANSPORTDATEChanging(value);
                ReportPropertyChanging("TRANSPORTDATE");
                _TRANSPORTDATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TRANSPORTDATE");
                OnTRANSPORTDATEChanged();
            }
        }
        private Nullable<global::System.DateTime> _TRANSPORTDATE;
        partial void OnTRANSPORTDATEChanging(Nullable<global::System.DateTime> value);
        partial void OnTRANSPORTDATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DEPARTUREID
        {
            get
            {
                return _DEPARTUREID;
            }
            set
            {
                OnDEPARTUREIDChanging(value);
                ReportPropertyChanging("DEPARTUREID");
                _DEPARTUREID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DEPARTUREID");
                OnDEPARTUREIDChanged();
            }
        }
        private Nullable<global::System.Int32> _DEPARTUREID;
        partial void OnDEPARTUREIDChanging(Nullable<global::System.Int32> value);
        partial void OnDEPARTUREIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DESTINATIONID
        {
            get
            {
                return _DESTINATIONID;
            }
            set
            {
                OnDESTINATIONIDChanging(value);
                ReportPropertyChanging("DESTINATIONID");
                _DESTINATIONID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DESTINATIONID");
                OnDESTINATIONIDChanged();
            }
        }
        private Nullable<global::System.Int32> _DESTINATIONID;
        partial void OnDESTINATIONIDChanging(Nullable<global::System.Int32> value);
        partial void OnDESTINATIONIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> WEIGHT
        {
            get
            {
                return _WEIGHT;
            }
            set
            {
                OnWEIGHTChanging(value);
                ReportPropertyChanging("WEIGHT");
                _WEIGHT = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WEIGHT");
                OnWEIGHTChanged();
            }
        }
        private Nullable<global::System.Decimal> _WEIGHT;
        partial void OnWEIGHTChanging(Nullable<global::System.Decimal> value);
        partial void OnWEIGHTChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> DISTANCE
        {
            get
            {
                return _DISTANCE;
            }
            set
            {
                OnDISTANCEChanging(value);
                ReportPropertyChanging("DISTANCE");
                _DISTANCE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DISTANCE");
                OnDISTANCEChanged();
            }
        }
        private Nullable<global::System.Decimal> _DISTANCE;
        partial void OnDISTANCEChanging(Nullable<global::System.Decimal> value);
        partial void OnDISTANCEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> PRICE
        {
            get
            {
                return _PRICE;
            }
            set
            {
                OnPRICEChanging(value);
                ReportPropertyChanging("PRICE");
                _PRICE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PRICE");
                OnPRICEChanged();
            }
        }
        private Nullable<global::System.Decimal> _PRICE;
        partial void OnPRICEChanging(Nullable<global::System.Decimal> value);
        partial void OnPRICEChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TransportationDatabaseModel", "FK_APPLICATION_TRANSPORTTYPE", "TRANSPORTTYPE")]
        public TRANSPORTTYPE TRANSPORTTYPE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TRANSPORTTYPE>("TransportationDatabaseModel.FK_APPLICATION_TRANSPORTTYPE", "TRANSPORTTYPE").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TRANSPORTTYPE>("TransportationDatabaseModel.FK_APPLICATION_TRANSPORTTYPE", "TRANSPORTTYPE").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TRANSPORTTYPE> TRANSPORTTYPEReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TRANSPORTTYPE>("TransportationDatabaseModel.FK_APPLICATION_TRANSPORTTYPE", "TRANSPORTTYPE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TRANSPORTTYPE>("TransportationDatabaseModel.FK_APPLICATION_TRANSPORTTYPE", "TRANSPORTTYPE", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TransportationDatabaseModel", "FK_APPLICATION_USER", "USER")]
        public USER USER
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<USER>("TransportationDatabaseModel.FK_APPLICATION_USER", "USER").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<USER>("TransportationDatabaseModel.FK_APPLICATION_USER", "USER").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<USER> USERReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<USER>("TransportationDatabaseModel.FK_APPLICATION_USER", "USER");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<USER>("TransportationDatabaseModel.FK_APPLICATION_USER", "USER", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TransportationDatabaseModel", "FK_APPLICATION_VEHICLE_APPLICATION", "APPLICATION_VEHICLE")]
        public EntityCollection<APPLICATION_VEHICLE> APPLICATION_VEHICLE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<APPLICATION_VEHICLE>("TransportationDatabaseModel.FK_APPLICATION_VEHICLE_APPLICATION", "APPLICATION_VEHICLE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<APPLICATION_VEHICLE>("TransportationDatabaseModel.FK_APPLICATION_VEHICLE_APPLICATION", "APPLICATION_VEHICLE", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TransportationDatabaseModel", "FK_COMMENT_APPLICATION", "COMMENT")]
        public EntityCollection<COMMENT> COMMENTs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<COMMENT>("TransportationDatabaseModel.FK_COMMENT_APPLICATION", "COMMENT");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<COMMENT>("TransportationDatabaseModel.FK_COMMENT_APPLICATION", "COMMENT", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TransportationDatabaseModel", Name="APPLICATION_VEHICLE")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class APPLICATION_VEHICLE : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new APPLICATION_VEHICLE object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static APPLICATION_VEHICLE CreateAPPLICATION_VEHICLE(global::System.Int32 id)
        {
            APPLICATION_VEHICLE aPPLICATION_VEHICLE = new APPLICATION_VEHICLE();
            aPPLICATION_VEHICLE.ID = id;
            return aPPLICATION_VEHICLE;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> APPLICATIONID
        {
            get
            {
                return _APPLICATIONID;
            }
            set
            {
                OnAPPLICATIONIDChanging(value);
                ReportPropertyChanging("APPLICATIONID");
                _APPLICATIONID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("APPLICATIONID");
                OnAPPLICATIONIDChanged();
            }
        }
        private Nullable<global::System.Int32> _APPLICATIONID;
        partial void OnAPPLICATIONIDChanging(Nullable<global::System.Int32> value);
        partial void OnAPPLICATIONIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> VEHICLEID
        {
            get
            {
                return _VEHICLEID;
            }
            set
            {
                OnVEHICLEIDChanging(value);
                ReportPropertyChanging("VEHICLEID");
                _VEHICLEID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VEHICLEID");
                OnVEHICLEIDChanged();
            }
        }
        private Nullable<global::System.Int32> _VEHICLEID;
        partial void OnVEHICLEIDChanging(Nullable<global::System.Int32> value);
        partial void OnVEHICLEIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DRIVERID
        {
            get
            {
                return _DRIVERID;
            }
            set
            {
                OnDRIVERIDChanging(value);
                ReportPropertyChanging("DRIVERID");
                _DRIVERID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DRIVERID");
                OnDRIVERIDChanged();
            }
        }
        private Nullable<global::System.Int32> _DRIVERID;
        partial void OnDRIVERIDChanging(Nullable<global::System.Int32> value);
        partial void OnDRIVERIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TransportationDatabaseModel", "FK_APPLICATION_VEHICLE_APPLICATION", "APPLICATION")]
        public APPLICATION APPLICATION
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<APPLICATION>("TransportationDatabaseModel.FK_APPLICATION_VEHICLE_APPLICATION", "APPLICATION").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<APPLICATION>("TransportationDatabaseModel.FK_APPLICATION_VEHICLE_APPLICATION", "APPLICATION").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<APPLICATION> APPLICATIONReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<APPLICATION>("TransportationDatabaseModel.FK_APPLICATION_VEHICLE_APPLICATION", "APPLICATION");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<APPLICATION>("TransportationDatabaseModel.FK_APPLICATION_VEHICLE_APPLICATION", "APPLICATION", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TransportationDatabaseModel", "FK_APPLICATION_VEHICLE_VEHICLE", "VEHICLE")]
        public VEHICLE VEHICLE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<VEHICLE>("TransportationDatabaseModel.FK_APPLICATION_VEHICLE_VEHICLE", "VEHICLE").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<VEHICLE>("TransportationDatabaseModel.FK_APPLICATION_VEHICLE_VEHICLE", "VEHICLE").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<VEHICLE> VEHICLEReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<VEHICLE>("TransportationDatabaseModel.FK_APPLICATION_VEHICLE_VEHICLE", "VEHICLE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<VEHICLE>("TransportationDatabaseModel.FK_APPLICATION_VEHICLE_VEHICLE", "VEHICLE", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TransportationDatabaseModel", Name="CITY")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CITY : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CITY object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static CITY CreateCITY(global::System.Int32 id)
        {
            CITY cITY = new CITY();
            cITY.ID = id;
            return cITY;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NAME
        {
            get
            {
                return _NAME;
            }
            set
            {
                OnNAMEChanging(value);
                ReportPropertyChanging("NAME");
                _NAME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NAME");
                OnNAMEChanged();
            }
        }
        private global::System.String _NAME;
        partial void OnNAMEChanging(global::System.String value);
        partial void OnNAMEChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TransportationDatabaseModel", "FK_ADDRESS_CITY", "ADDRESS")]
        public EntityCollection<ADDRESS> ADDRESSes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ADDRESS>("TransportationDatabaseModel.FK_ADDRESS_CITY", "ADDRESS");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ADDRESS>("TransportationDatabaseModel.FK_ADDRESS_CITY", "ADDRESS", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TransportationDatabaseModel", Name="COMMENT")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class COMMENT : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new COMMENT object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static COMMENT CreateCOMMENT(global::System.Int32 id)
        {
            COMMENT cOMMENT = new COMMENT();
            cOMMENT.ID = id;
            return cOMMENT;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> USERID
        {
            get
            {
                return _USERID;
            }
            set
            {
                OnUSERIDChanging(value);
                ReportPropertyChanging("USERID");
                _USERID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("USERID");
                OnUSERIDChanged();
            }
        }
        private Nullable<global::System.Int32> _USERID;
        partial void OnUSERIDChanging(Nullable<global::System.Int32> value);
        partial void OnUSERIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> APPLICATIONID
        {
            get
            {
                return _APPLICATIONID;
            }
            set
            {
                OnAPPLICATIONIDChanging(value);
                ReportPropertyChanging("APPLICATIONID");
                _APPLICATIONID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("APPLICATIONID");
                OnAPPLICATIONIDChanged();
            }
        }
        private Nullable<global::System.Int32> _APPLICATIONID;
        partial void OnAPPLICATIONIDChanging(Nullable<global::System.Int32> value);
        partial void OnAPPLICATIONIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String USERCOMMENT
        {
            get
            {
                return _USERCOMMENT;
            }
            set
            {
                OnUSERCOMMENTChanging(value);
                ReportPropertyChanging("USERCOMMENT");
                _USERCOMMENT = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("USERCOMMENT");
                OnUSERCOMMENTChanged();
            }
        }
        private global::System.String _USERCOMMENT;
        partial void OnUSERCOMMENTChanging(global::System.String value);
        partial void OnUSERCOMMENTChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TransportationDatabaseModel", "FK_COMMENT_APPLICATION", "APPLICATION")]
        public APPLICATION APPLICATION
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<APPLICATION>("TransportationDatabaseModel.FK_COMMENT_APPLICATION", "APPLICATION").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<APPLICATION>("TransportationDatabaseModel.FK_COMMENT_APPLICATION", "APPLICATION").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<APPLICATION> APPLICATIONReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<APPLICATION>("TransportationDatabaseModel.FK_COMMENT_APPLICATION", "APPLICATION");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<APPLICATION>("TransportationDatabaseModel.FK_COMMENT_APPLICATION", "APPLICATION", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TransportationDatabaseModel", Name="COMPANY")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class COMPANY : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new COMPANY object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static COMPANY CreateCOMPANY(global::System.Int32 id)
        {
            COMPANY cOMPANY = new COMPANY();
            cOMPANY.ID = id;
            return cOMPANY;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NAME
        {
            get
            {
                return _NAME;
            }
            set
            {
                OnNAMEChanging(value);
                ReportPropertyChanging("NAME");
                _NAME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NAME");
                OnNAMEChanged();
            }
        }
        private global::System.String _NAME;
        partial void OnNAMEChanging(global::System.String value);
        partial void OnNAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OWNER
        {
            get
            {
                return _OWNER;
            }
            set
            {
                OnOWNERChanging(value);
                ReportPropertyChanging("OWNER");
                _OWNER = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("OWNER");
                OnOWNERChanged();
            }
        }
        private global::System.String _OWNER;
        partial void OnOWNERChanging(global::System.String value);
        partial void OnOWNERChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TELEPHONE
        {
            get
            {
                return _TELEPHONE;
            }
            set
            {
                OnTELEPHONEChanging(value);
                ReportPropertyChanging("TELEPHONE");
                _TELEPHONE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TELEPHONE");
                OnTELEPHONEChanged();
            }
        }
        private global::System.String _TELEPHONE;
        partial void OnTELEPHONEChanging(global::System.String value);
        partial void OnTELEPHONEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FAX
        {
            get
            {
                return _FAX;
            }
            set
            {
                OnFAXChanging(value);
                ReportPropertyChanging("FAX");
                _FAX = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FAX");
                OnFAXChanged();
            }
        }
        private global::System.String _FAX;
        partial void OnFAXChanging(global::System.String value);
        partial void OnFAXChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EMAIL
        {
            get
            {
                return _EMAIL;
            }
            set
            {
                OnEMAILChanging(value);
                ReportPropertyChanging("EMAIL");
                _EMAIL = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EMAIL");
                OnEMAILChanged();
            }
        }
        private global::System.String _EMAIL;
        partial void OnEMAILChanging(global::System.String value);
        partial void OnEMAILChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ADDRESSID
        {
            get
            {
                return _ADDRESSID;
            }
            set
            {
                OnADDRESSIDChanging(value);
                ReportPropertyChanging("ADDRESSID");
                _ADDRESSID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ADDRESSID");
                OnADDRESSIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ADDRESSID;
        partial void OnADDRESSIDChanging(Nullable<global::System.Int32> value);
        partial void OnADDRESSIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ESTABLISHMENTDATE
        {
            get
            {
                return _ESTABLISHMENTDATE;
            }
            set
            {
                OnESTABLISHMENTDATEChanging(value);
                ReportPropertyChanging("ESTABLISHMENTDATE");
                _ESTABLISHMENTDATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ESTABLISHMENTDATE");
                OnESTABLISHMENTDATEChanged();
            }
        }
        private Nullable<global::System.DateTime> _ESTABLISHMENTDATE;
        partial void OnESTABLISHMENTDATEChanging(Nullable<global::System.DateTime> value);
        partial void OnESTABLISHMENTDATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String COMPANYUSERNAME
        {
            get
            {
                return _COMPANYUSERNAME;
            }
            set
            {
                OnCOMPANYUSERNAMEChanging(value);
                ReportPropertyChanging("COMPANYUSERNAME");
                _COMPANYUSERNAME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("COMPANYUSERNAME");
                OnCOMPANYUSERNAMEChanged();
            }
        }
        private global::System.String _COMPANYUSERNAME;
        partial void OnCOMPANYUSERNAMEChanging(global::System.String value);
        partial void OnCOMPANYUSERNAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String COMPANYPASSWORD
        {
            get
            {
                return _COMPANYPASSWORD;
            }
            set
            {
                OnCOMPANYPASSWORDChanging(value);
                ReportPropertyChanging("COMPANYPASSWORD");
                _COMPANYPASSWORD = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("COMPANYPASSWORD");
                OnCOMPANYPASSWORDChanged();
            }
        }
        private global::System.String _COMPANYPASSWORD;
        partial void OnCOMPANYPASSWORDChanging(global::System.String value);
        partial void OnCOMPANYPASSWORDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ROLEID
        {
            get
            {
                return _ROLEID;
            }
            set
            {
                OnROLEIDChanging(value);
                ReportPropertyChanging("ROLEID");
                _ROLEID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ROLEID");
                OnROLEIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ROLEID;
        partial void OnROLEIDChanging(Nullable<global::System.Int32> value);
        partial void OnROLEIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TransportationDatabaseModel", "FK_EMPLOYEE_COMPANY", "EMPLOYEE")]
        public EntityCollection<EMPLOYEE> EMPLOYEEs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EMPLOYEE>("TransportationDatabaseModel.FK_EMPLOYEE_COMPANY", "EMPLOYEE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EMPLOYEE>("TransportationDatabaseModel.FK_EMPLOYEE_COMPANY", "EMPLOYEE", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TransportationDatabaseModel", "FK_VEHICLE_COMPANY", "VEHICLE")]
        public EntityCollection<VEHICLE> VEHICLEs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<VEHICLE>("TransportationDatabaseModel.FK_VEHICLE_COMPANY", "VEHICLE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<VEHICLE>("TransportationDatabaseModel.FK_VEHICLE_COMPANY", "VEHICLE", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TransportationDatabaseModel", "FK_COMPANY_ROLE", "ROLE")]
        public ROLE ROLE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ROLE>("TransportationDatabaseModel.FK_COMPANY_ROLE", "ROLE").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ROLE>("TransportationDatabaseModel.FK_COMPANY_ROLE", "ROLE").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ROLE> ROLEReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ROLE>("TransportationDatabaseModel.FK_COMPANY_ROLE", "ROLE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ROLE>("TransportationDatabaseModel.FK_COMPANY_ROLE", "ROLE", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TransportationDatabaseModel", Name="DISTRICT")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DISTRICT : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DISTRICT object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static DISTRICT CreateDISTRICT(global::System.Int32 id)
        {
            DISTRICT dISTRICT = new DISTRICT();
            dISTRICT.ID = id;
            return dISTRICT;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NAME
        {
            get
            {
                return _NAME;
            }
            set
            {
                OnNAMEChanging(value);
                ReportPropertyChanging("NAME");
                _NAME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NAME");
                OnNAMEChanged();
            }
        }
        private global::System.String _NAME;
        partial void OnNAMEChanging(global::System.String value);
        partial void OnNAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CITYID
        {
            get
            {
                return _CITYID;
            }
            set
            {
                OnCITYIDChanging(value);
                ReportPropertyChanging("CITYID");
                _CITYID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CITYID");
                OnCITYIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CITYID;
        partial void OnCITYIDChanging(Nullable<global::System.Int32> value);
        partial void OnCITYIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TransportationDatabaseModel", "FK_ADDRESS_DISTRICT", "ADDRESS")]
        public EntityCollection<ADDRESS> ADDRESSes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ADDRESS>("TransportationDatabaseModel.FK_ADDRESS_DISTRICT", "ADDRESS");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ADDRESS>("TransportationDatabaseModel.FK_ADDRESS_DISTRICT", "ADDRESS", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TransportationDatabaseModel", Name="EMPLOYEE")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EMPLOYEE : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EMPLOYEE object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static EMPLOYEE CreateEMPLOYEE(global::System.Int32 id)
        {
            EMPLOYEE eMPLOYEE = new EMPLOYEE();
            eMPLOYEE.ID = id;
            return eMPLOYEE;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NAME
        {
            get
            {
                return _NAME;
            }
            set
            {
                OnNAMEChanging(value);
                ReportPropertyChanging("NAME");
                _NAME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NAME");
                OnNAMEChanged();
            }
        }
        private global::System.String _NAME;
        partial void OnNAMEChanging(global::System.String value);
        partial void OnNAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SURNAME
        {
            get
            {
                return _SURNAME;
            }
            set
            {
                OnSURNAMEChanging(value);
                ReportPropertyChanging("SURNAME");
                _SURNAME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SURNAME");
                OnSURNAMEChanged();
            }
        }
        private global::System.String _SURNAME;
        partial void OnSURNAMEChanging(global::System.String value);
        partial void OnSURNAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String IDENTITYNUMBER
        {
            get
            {
                return _IDENTITYNUMBER;
            }
            set
            {
                OnIDENTITYNUMBERChanging(value);
                ReportPropertyChanging("IDENTITYNUMBER");
                _IDENTITYNUMBER = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("IDENTITYNUMBER");
                OnIDENTITYNUMBERChanged();
            }
        }
        private global::System.String _IDENTITYNUMBER;
        partial void OnIDENTITYNUMBERChanging(global::System.String value);
        partial void OnIDENTITYNUMBERChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TELEPHONE
        {
            get
            {
                return _TELEPHONE;
            }
            set
            {
                OnTELEPHONEChanging(value);
                ReportPropertyChanging("TELEPHONE");
                _TELEPHONE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TELEPHONE");
                OnTELEPHONEChanged();
            }
        }
        private global::System.String _TELEPHONE;
        partial void OnTELEPHONEChanging(global::System.String value);
        partial void OnTELEPHONEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EMAIL
        {
            get
            {
                return _EMAIL;
            }
            set
            {
                OnEMAILChanging(value);
                ReportPropertyChanging("EMAIL");
                _EMAIL = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EMAIL");
                OnEMAILChanged();
            }
        }
        private global::System.String _EMAIL;
        partial void OnEMAILChanging(global::System.String value);
        partial void OnEMAILChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String GENDER
        {
            get
            {
                return _GENDER;
            }
            set
            {
                OnGENDERChanging(value);
                ReportPropertyChanging("GENDER");
                _GENDER = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("GENDER");
                OnGENDERChanged();
            }
        }
        private global::System.String _GENDER;
        partial void OnGENDERChanging(global::System.String value);
        partial void OnGENDERChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> BIRTHDATE
        {
            get
            {
                return _BIRTHDATE;
            }
            set
            {
                OnBIRTHDATEChanging(value);
                ReportPropertyChanging("BIRTHDATE");
                _BIRTHDATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BIRTHDATE");
                OnBIRTHDATEChanged();
            }
        }
        private Nullable<global::System.DateTime> _BIRTHDATE;
        partial void OnBIRTHDATEChanging(Nullable<global::System.DateTime> value);
        partial void OnBIRTHDATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ADDRESSID
        {
            get
            {
                return _ADDRESSID;
            }
            set
            {
                OnADDRESSIDChanging(value);
                ReportPropertyChanging("ADDRESSID");
                _ADDRESSID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ADDRESSID");
                OnADDRESSIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ADDRESSID;
        partial void OnADDRESSIDChanging(Nullable<global::System.Int32> value);
        partial void OnADDRESSIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> COMPANYID
        {
            get
            {
                return _COMPANYID;
            }
            set
            {
                OnCOMPANYIDChanging(value);
                ReportPropertyChanging("COMPANYID");
                _COMPANYID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("COMPANYID");
                OnCOMPANYIDChanged();
            }
        }
        private Nullable<global::System.Int32> _COMPANYID;
        partial void OnCOMPANYIDChanging(Nullable<global::System.Int32> value);
        partial void OnCOMPANYIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DRIVERLICENSEGROUP
        {
            get
            {
                return _DRIVERLICENSEGROUP;
            }
            set
            {
                OnDRIVERLICENSEGROUPChanging(value);
                ReportPropertyChanging("DRIVERLICENSEGROUP");
                _DRIVERLICENSEGROUP = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DRIVERLICENSEGROUP");
                OnDRIVERLICENSEGROUPChanged();
            }
        }
        private global::System.String _DRIVERLICENSEGROUP;
        partial void OnDRIVERLICENSEGROUPChanging(global::System.String value);
        partial void OnDRIVERLICENSEGROUPChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DRIVERLICENSENUMBER
        {
            get
            {
                return _DRIVERLICENSENUMBER;
            }
            set
            {
                OnDRIVERLICENSENUMBERChanging(value);
                ReportPropertyChanging("DRIVERLICENSENUMBER");
                _DRIVERLICENSENUMBER = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DRIVERLICENSENUMBER");
                OnDRIVERLICENSENUMBERChanged();
            }
        }
        private global::System.String _DRIVERLICENSENUMBER;
        partial void OnDRIVERLICENSENUMBERChanging(global::System.String value);
        partial void OnDRIVERLICENSENUMBERChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> EMPLOYEETYPEID
        {
            get
            {
                return _EMPLOYEETYPEID;
            }
            set
            {
                OnEMPLOYEETYPEIDChanging(value);
                ReportPropertyChanging("EMPLOYEETYPEID");
                _EMPLOYEETYPEID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EMPLOYEETYPEID");
                OnEMPLOYEETYPEIDChanged();
            }
        }
        private Nullable<global::System.Int32> _EMPLOYEETYPEID;
        partial void OnEMPLOYEETYPEIDChanging(Nullable<global::System.Int32> value);
        partial void OnEMPLOYEETYPEIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TransportationDatabaseModel", "FK_EMPLOYEE_COMPANY", "COMPANY")]
        public COMPANY COMPANY
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<COMPANY>("TransportationDatabaseModel.FK_EMPLOYEE_COMPANY", "COMPANY").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<COMPANY>("TransportationDatabaseModel.FK_EMPLOYEE_COMPANY", "COMPANY").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<COMPANY> COMPANYReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<COMPANY>("TransportationDatabaseModel.FK_EMPLOYEE_COMPANY", "COMPANY");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<COMPANY>("TransportationDatabaseModel.FK_EMPLOYEE_COMPANY", "COMPANY", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TransportationDatabaseModel", "FK_VEHICLE_EMPLOYEE_EMPLOYEE", "VEHICLE_EMPLOYEE")]
        public EntityCollection<VEHICLE_EMPLOYEE> VEHICLE_EMPLOYEE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<VEHICLE_EMPLOYEE>("TransportationDatabaseModel.FK_VEHICLE_EMPLOYEE_EMPLOYEE", "VEHICLE_EMPLOYEE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<VEHICLE_EMPLOYEE>("TransportationDatabaseModel.FK_VEHICLE_EMPLOYEE_EMPLOYEE", "VEHICLE_EMPLOYEE", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TransportationDatabaseModel", "FK_EMPLOYEE_EMPLOYEETYPE", "EMPLOYEETYPE")]
        public EMPLOYEETYPE EMPLOYEETYPE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EMPLOYEETYPE>("TransportationDatabaseModel.FK_EMPLOYEE_EMPLOYEETYPE", "EMPLOYEETYPE").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EMPLOYEETYPE>("TransportationDatabaseModel.FK_EMPLOYEE_EMPLOYEETYPE", "EMPLOYEETYPE").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EMPLOYEETYPE> EMPLOYEETYPEReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EMPLOYEETYPE>("TransportationDatabaseModel.FK_EMPLOYEE_EMPLOYEETYPE", "EMPLOYEETYPE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EMPLOYEETYPE>("TransportationDatabaseModel.FK_EMPLOYEE_EMPLOYEETYPE", "EMPLOYEETYPE", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TransportationDatabaseModel", Name="EMPLOYEETYPE")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EMPLOYEETYPE : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EMPLOYEETYPE object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static EMPLOYEETYPE CreateEMPLOYEETYPE(global::System.Int32 id)
        {
            EMPLOYEETYPE eMPLOYEETYPE = new EMPLOYEETYPE();
            eMPLOYEETYPE.ID = id;
            return eMPLOYEETYPE;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TYPE
        {
            get
            {
                return _TYPE;
            }
            set
            {
                OnTYPEChanging(value);
                ReportPropertyChanging("TYPE");
                _TYPE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TYPE");
                OnTYPEChanged();
            }
        }
        private global::System.String _TYPE;
        partial void OnTYPEChanging(global::System.String value);
        partial void OnTYPEChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TransportationDatabaseModel", "FK_EMPLOYEE_EMPLOYEETYPE", "EMPLOYEE")]
        public EntityCollection<EMPLOYEE> EMPLOYEEs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EMPLOYEE>("TransportationDatabaseModel.FK_EMPLOYEE_EMPLOYEETYPE", "EMPLOYEE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EMPLOYEE>("TransportationDatabaseModel.FK_EMPLOYEE_EMPLOYEETYPE", "EMPLOYEE", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TransportationDatabaseModel", Name="ROLE")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ROLE : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ROLE object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static ROLE CreateROLE(global::System.Int32 id)
        {
            ROLE rOLE = new ROLE();
            rOLE.ID = id;
            return rOLE;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ROLENAME
        {
            get
            {
                return _ROLENAME;
            }
            set
            {
                OnROLENAMEChanging(value);
                ReportPropertyChanging("ROLENAME");
                _ROLENAME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ROLENAME");
                OnROLENAMEChanged();
            }
        }
        private global::System.String _ROLENAME;
        partial void OnROLENAMEChanging(global::System.String value);
        partial void OnROLENAMEChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TransportationDatabaseModel", "FK_COMPANY_ROLE", "COMPANY")]
        public EntityCollection<COMPANY> COMPANies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<COMPANY>("TransportationDatabaseModel.FK_COMPANY_ROLE", "COMPANY");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<COMPANY>("TransportationDatabaseModel.FK_COMPANY_ROLE", "COMPANY", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TransportationDatabaseModel", "FK_USER_ROLE", "USER")]
        public EntityCollection<USER> USERs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<USER>("TransportationDatabaseModel.FK_USER_ROLE", "USER");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<USER>("TransportationDatabaseModel.FK_USER_ROLE", "USER", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TransportationDatabaseModel", Name="TRANSPORTTYPE")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TRANSPORTTYPE : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TRANSPORTTYPE object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static TRANSPORTTYPE CreateTRANSPORTTYPE(global::System.Int32 id)
        {
            TRANSPORTTYPE tRANSPORTTYPE = new TRANSPORTTYPE();
            tRANSPORTTYPE.ID = id;
            return tRANSPORTTYPE;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TYPE
        {
            get
            {
                return _TYPE;
            }
            set
            {
                OnTYPEChanging(value);
                ReportPropertyChanging("TYPE");
                _TYPE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TYPE");
                OnTYPEChanged();
            }
        }
        private global::System.String _TYPE;
        partial void OnTYPEChanging(global::System.String value);
        partial void OnTYPEChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TransportationDatabaseModel", "FK_APPLICATION_TRANSPORTTYPE", "APPLICATION")]
        public EntityCollection<APPLICATION> APPLICATIONs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<APPLICATION>("TransportationDatabaseModel.FK_APPLICATION_TRANSPORTTYPE", "APPLICATION");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<APPLICATION>("TransportationDatabaseModel.FK_APPLICATION_TRANSPORTTYPE", "APPLICATION", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TransportationDatabaseModel", "FK_VEHICLE_TRANSPORTTYPE", "VEHICLE")]
        public EntityCollection<VEHICLE> VEHICLEs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<VEHICLE>("TransportationDatabaseModel.FK_VEHICLE_TRANSPORTTYPE", "VEHICLE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<VEHICLE>("TransportationDatabaseModel.FK_VEHICLE_TRANSPORTTYPE", "VEHICLE", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TransportationDatabaseModel", Name="USER")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class USER : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new USER object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static USER CreateUSER(global::System.Int32 id)
        {
            USER uSER = new USER();
            uSER.ID = id;
            return uSER;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NAME
        {
            get
            {
                return _NAME;
            }
            set
            {
                OnNAMEChanging(value);
                ReportPropertyChanging("NAME");
                _NAME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NAME");
                OnNAMEChanged();
            }
        }
        private global::System.String _NAME;
        partial void OnNAMEChanging(global::System.String value);
        partial void OnNAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SURNAME
        {
            get
            {
                return _SURNAME;
            }
            set
            {
                OnSURNAMEChanging(value);
                ReportPropertyChanging("SURNAME");
                _SURNAME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SURNAME");
                OnSURNAMEChanged();
            }
        }
        private global::System.String _SURNAME;
        partial void OnSURNAMEChanging(global::System.String value);
        partial void OnSURNAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String USERNAME
        {
            get
            {
                return _USERNAME;
            }
            set
            {
                OnUSERNAMEChanging(value);
                ReportPropertyChanging("USERNAME");
                _USERNAME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("USERNAME");
                OnUSERNAMEChanged();
            }
        }
        private global::System.String _USERNAME;
        partial void OnUSERNAMEChanging(global::System.String value);
        partial void OnUSERNAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EMAIL
        {
            get
            {
                return _EMAIL;
            }
            set
            {
                OnEMAILChanging(value);
                ReportPropertyChanging("EMAIL");
                _EMAIL = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EMAIL");
                OnEMAILChanged();
            }
        }
        private global::System.String _EMAIL;
        partial void OnEMAILChanging(global::System.String value);
        partial void OnEMAILChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TELEPHONE
        {
            get
            {
                return _TELEPHONE;
            }
            set
            {
                OnTELEPHONEChanging(value);
                ReportPropertyChanging("TELEPHONE");
                _TELEPHONE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TELEPHONE");
                OnTELEPHONEChanged();
            }
        }
        private global::System.String _TELEPHONE;
        partial void OnTELEPHONEChanging(global::System.String value);
        partial void OnTELEPHONEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String GENDER
        {
            get
            {
                return _GENDER;
            }
            set
            {
                OnGENDERChanging(value);
                ReportPropertyChanging("GENDER");
                _GENDER = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("GENDER");
                OnGENDERChanged();
            }
        }
        private global::System.String _GENDER;
        partial void OnGENDERChanging(global::System.String value);
        partial void OnGENDERChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> BIRTHDATE
        {
            get
            {
                return _BIRTHDATE;
            }
            set
            {
                OnBIRTHDATEChanging(value);
                ReportPropertyChanging("BIRTHDATE");
                _BIRTHDATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BIRTHDATE");
                OnBIRTHDATEChanged();
            }
        }
        private Nullable<global::System.DateTime> _BIRTHDATE;
        partial void OnBIRTHDATEChanging(Nullable<global::System.DateTime> value);
        partial void OnBIRTHDATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ADDRESSID
        {
            get
            {
                return _ADDRESSID;
            }
            set
            {
                OnADDRESSIDChanging(value);
                ReportPropertyChanging("ADDRESSID");
                _ADDRESSID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ADDRESSID");
                OnADDRESSIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ADDRESSID;
        partial void OnADDRESSIDChanging(Nullable<global::System.Int32> value);
        partial void OnADDRESSIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String IDENTITYNUMBER
        {
            get
            {
                return _IDENTITYNUMBER;
            }
            set
            {
                OnIDENTITYNUMBERChanging(value);
                ReportPropertyChanging("IDENTITYNUMBER");
                _IDENTITYNUMBER = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("IDENTITYNUMBER");
                OnIDENTITYNUMBERChanged();
            }
        }
        private global::System.String _IDENTITYNUMBER;
        partial void OnIDENTITYNUMBERChanging(global::System.String value);
        partial void OnIDENTITYNUMBERChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PASSWORD
        {
            get
            {
                return _PASSWORD;
            }
            set
            {
                OnPASSWORDChanging(value);
                ReportPropertyChanging("PASSWORD");
                _PASSWORD = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PASSWORD");
                OnPASSWORDChanged();
            }
        }
        private global::System.String _PASSWORD;
        partial void OnPASSWORDChanging(global::System.String value);
        partial void OnPASSWORDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ROLEID
        {
            get
            {
                return _ROLEID;
            }
            set
            {
                OnROLEIDChanging(value);
                ReportPropertyChanging("ROLEID");
                _ROLEID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ROLEID");
                OnROLEIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ROLEID;
        partial void OnROLEIDChanging(Nullable<global::System.Int32> value);
        partial void OnROLEIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TransportationDatabaseModel", "FK_APPLICATION_USER", "APPLICATION")]
        public EntityCollection<APPLICATION> APPLICATIONs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<APPLICATION>("TransportationDatabaseModel.FK_APPLICATION_USER", "APPLICATION");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<APPLICATION>("TransportationDatabaseModel.FK_APPLICATION_USER", "APPLICATION", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TransportationDatabaseModel", "FK_USER_ROLE", "ROLE")]
        public ROLE ROLE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ROLE>("TransportationDatabaseModel.FK_USER_ROLE", "ROLE").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ROLE>("TransportationDatabaseModel.FK_USER_ROLE", "ROLE").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ROLE> ROLEReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ROLE>("TransportationDatabaseModel.FK_USER_ROLE", "ROLE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ROLE>("TransportationDatabaseModel.FK_USER_ROLE", "ROLE", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TransportationDatabaseModel", Name="VEHICLE")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class VEHICLE : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new VEHICLE object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static VEHICLE CreateVEHICLE(global::System.Int32 id)
        {
            VEHICLE vEHICLE = new VEHICLE();
            vEHICLE.ID = id;
            return vEHICLE;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PLATENUMBER
        {
            get
            {
                return _PLATENUMBER;
            }
            set
            {
                OnPLATENUMBERChanging(value);
                ReportPropertyChanging("PLATENUMBER");
                _PLATENUMBER = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PLATENUMBER");
                OnPLATENUMBERChanged();
            }
        }
        private global::System.String _PLATENUMBER;
        partial void OnPLATENUMBERChanging(global::System.String value);
        partial void OnPLATENUMBERChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> VEHICLETYPEID
        {
            get
            {
                return _VEHICLETYPEID;
            }
            set
            {
                OnVEHICLETYPEIDChanging(value);
                ReportPropertyChanging("VEHICLETYPEID");
                _VEHICLETYPEID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VEHICLETYPEID");
                OnVEHICLETYPEIDChanged();
            }
        }
        private Nullable<global::System.Int32> _VEHICLETYPEID;
        partial void OnVEHICLETYPEIDChanging(Nullable<global::System.Int32> value);
        partial void OnVEHICLETYPEIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> COMPANYID
        {
            get
            {
                return _COMPANYID;
            }
            set
            {
                OnCOMPANYIDChanging(value);
                ReportPropertyChanging("COMPANYID");
                _COMPANYID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("COMPANYID");
                OnCOMPANYIDChanged();
            }
        }
        private Nullable<global::System.Int32> _COMPANYID;
        partial void OnCOMPANYIDChanging(Nullable<global::System.Int32> value);
        partial void OnCOMPANYIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> WEIGHTCAPACITY
        {
            get
            {
                return _WEIGHTCAPACITY;
            }
            set
            {
                OnWEIGHTCAPACITYChanging(value);
                ReportPropertyChanging("WEIGHTCAPACITY");
                _WEIGHTCAPACITY = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WEIGHTCAPACITY");
                OnWEIGHTCAPACITYChanged();
            }
        }
        private Nullable<global::System.Decimal> _WEIGHTCAPACITY;
        partial void OnWEIGHTCAPACITYChanging(Nullable<global::System.Decimal> value);
        partial void OnWEIGHTCAPACITYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> UNITPRICE
        {
            get
            {
                return _UNITPRICE;
            }
            set
            {
                OnUNITPRICEChanging(value);
                ReportPropertyChanging("UNITPRICE");
                _UNITPRICE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UNITPRICE");
                OnUNITPRICEChanged();
            }
        }
        private Nullable<global::System.Decimal> _UNITPRICE;
        partial void OnUNITPRICEChanging(Nullable<global::System.Decimal> value);
        partial void OnUNITPRICEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TRANSPORTTYPEID
        {
            get
            {
                return _TRANSPORTTYPEID;
            }
            set
            {
                OnTRANSPORTTYPEIDChanging(value);
                ReportPropertyChanging("TRANSPORTTYPEID");
                _TRANSPORTTYPEID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TRANSPORTTYPEID");
                OnTRANSPORTTYPEIDChanged();
            }
        }
        private Nullable<global::System.Int32> _TRANSPORTTYPEID;
        partial void OnTRANSPORTTYPEIDChanging(Nullable<global::System.Int32> value);
        partial void OnTRANSPORTTYPEIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TransportationDatabaseModel", "FK_APPLICATION_VEHICLE_VEHICLE", "APPLICATION_VEHICLE")]
        public EntityCollection<APPLICATION_VEHICLE> APPLICATION_VEHICLE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<APPLICATION_VEHICLE>("TransportationDatabaseModel.FK_APPLICATION_VEHICLE_VEHICLE", "APPLICATION_VEHICLE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<APPLICATION_VEHICLE>("TransportationDatabaseModel.FK_APPLICATION_VEHICLE_VEHICLE", "APPLICATION_VEHICLE", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TransportationDatabaseModel", "FK_VEHICLE_COMPANY", "COMPANY")]
        public COMPANY COMPANY
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<COMPANY>("TransportationDatabaseModel.FK_VEHICLE_COMPANY", "COMPANY").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<COMPANY>("TransportationDatabaseModel.FK_VEHICLE_COMPANY", "COMPANY").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<COMPANY> COMPANYReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<COMPANY>("TransportationDatabaseModel.FK_VEHICLE_COMPANY", "COMPANY");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<COMPANY>("TransportationDatabaseModel.FK_VEHICLE_COMPANY", "COMPANY", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TransportationDatabaseModel", "FK_VEHICLE_EMPLOYEE_VEHICLE", "VEHICLE_EMPLOYEE")]
        public EntityCollection<VEHICLE_EMPLOYEE> VEHICLE_EMPLOYEE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<VEHICLE_EMPLOYEE>("TransportationDatabaseModel.FK_VEHICLE_EMPLOYEE_VEHICLE", "VEHICLE_EMPLOYEE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<VEHICLE_EMPLOYEE>("TransportationDatabaseModel.FK_VEHICLE_EMPLOYEE_VEHICLE", "VEHICLE_EMPLOYEE", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TransportationDatabaseModel", "FK_VEHICLE_VEHICLETYPE", "VEHICLETYPE")]
        public VEHICLETYPE VEHICLETYPE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<VEHICLETYPE>("TransportationDatabaseModel.FK_VEHICLE_VEHICLETYPE", "VEHICLETYPE").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<VEHICLETYPE>("TransportationDatabaseModel.FK_VEHICLE_VEHICLETYPE", "VEHICLETYPE").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<VEHICLETYPE> VEHICLETYPEReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<VEHICLETYPE>("TransportationDatabaseModel.FK_VEHICLE_VEHICLETYPE", "VEHICLETYPE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<VEHICLETYPE>("TransportationDatabaseModel.FK_VEHICLE_VEHICLETYPE", "VEHICLETYPE", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TransportationDatabaseModel", "FK_VEHICLE_TRANSPORTTYPE", "TRANSPORTTYPE")]
        public TRANSPORTTYPE TRANSPORTTYPE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TRANSPORTTYPE>("TransportationDatabaseModel.FK_VEHICLE_TRANSPORTTYPE", "TRANSPORTTYPE").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TRANSPORTTYPE>("TransportationDatabaseModel.FK_VEHICLE_TRANSPORTTYPE", "TRANSPORTTYPE").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TRANSPORTTYPE> TRANSPORTTYPEReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TRANSPORTTYPE>("TransportationDatabaseModel.FK_VEHICLE_TRANSPORTTYPE", "TRANSPORTTYPE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TRANSPORTTYPE>("TransportationDatabaseModel.FK_VEHICLE_TRANSPORTTYPE", "TRANSPORTTYPE", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TransportationDatabaseModel", Name="VEHICLE_EMPLOYEE")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class VEHICLE_EMPLOYEE : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new VEHICLE_EMPLOYEE object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static VEHICLE_EMPLOYEE CreateVEHICLE_EMPLOYEE(global::System.Int32 id)
        {
            VEHICLE_EMPLOYEE vEHICLE_EMPLOYEE = new VEHICLE_EMPLOYEE();
            vEHICLE_EMPLOYEE.ID = id;
            return vEHICLE_EMPLOYEE;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> VEHICLEID
        {
            get
            {
                return _VEHICLEID;
            }
            set
            {
                OnVEHICLEIDChanging(value);
                ReportPropertyChanging("VEHICLEID");
                _VEHICLEID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VEHICLEID");
                OnVEHICLEIDChanged();
            }
        }
        private Nullable<global::System.Int32> _VEHICLEID;
        partial void OnVEHICLEIDChanging(Nullable<global::System.Int32> value);
        partial void OnVEHICLEIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> EMPLOYEEID
        {
            get
            {
                return _EMPLOYEEID;
            }
            set
            {
                OnEMPLOYEEIDChanging(value);
                ReportPropertyChanging("EMPLOYEEID");
                _EMPLOYEEID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EMPLOYEEID");
                OnEMPLOYEEIDChanged();
            }
        }
        private Nullable<global::System.Int32> _EMPLOYEEID;
        partial void OnEMPLOYEEIDChanging(Nullable<global::System.Int32> value);
        partial void OnEMPLOYEEIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TransportationDatabaseModel", "FK_VEHICLE_EMPLOYEE_EMPLOYEE", "EMPLOYEE")]
        public EMPLOYEE EMPLOYEE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EMPLOYEE>("TransportationDatabaseModel.FK_VEHICLE_EMPLOYEE_EMPLOYEE", "EMPLOYEE").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EMPLOYEE>("TransportationDatabaseModel.FK_VEHICLE_EMPLOYEE_EMPLOYEE", "EMPLOYEE").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EMPLOYEE> EMPLOYEEReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EMPLOYEE>("TransportationDatabaseModel.FK_VEHICLE_EMPLOYEE_EMPLOYEE", "EMPLOYEE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EMPLOYEE>("TransportationDatabaseModel.FK_VEHICLE_EMPLOYEE_EMPLOYEE", "EMPLOYEE", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TransportationDatabaseModel", "FK_VEHICLE_EMPLOYEE_VEHICLE", "VEHICLE")]
        public VEHICLE VEHICLE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<VEHICLE>("TransportationDatabaseModel.FK_VEHICLE_EMPLOYEE_VEHICLE", "VEHICLE").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<VEHICLE>("TransportationDatabaseModel.FK_VEHICLE_EMPLOYEE_VEHICLE", "VEHICLE").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<VEHICLE> VEHICLEReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<VEHICLE>("TransportationDatabaseModel.FK_VEHICLE_EMPLOYEE_VEHICLE", "VEHICLE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<VEHICLE>("TransportationDatabaseModel.FK_VEHICLE_EMPLOYEE_VEHICLE", "VEHICLE", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TransportationDatabaseModel", Name="VEHICLETYPE")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class VEHICLETYPE : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new VEHICLETYPE object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static VEHICLETYPE CreateVEHICLETYPE(global::System.Int32 id)
        {
            VEHICLETYPE vEHICLETYPE = new VEHICLETYPE();
            vEHICLETYPE.ID = id;
            return vEHICLETYPE;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TYPE
        {
            get
            {
                return _TYPE;
            }
            set
            {
                OnTYPEChanging(value);
                ReportPropertyChanging("TYPE");
                _TYPE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TYPE");
                OnTYPEChanged();
            }
        }
        private global::System.String _TYPE;
        partial void OnTYPEChanging(global::System.String value);
        partial void OnTYPEChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TransportationDatabaseModel", "FK_VEHICLE_VEHICLETYPE", "VEHICLE")]
        public EntityCollection<VEHICLE> VEHICLEs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<VEHICLE>("TransportationDatabaseModel.FK_VEHICLE_VEHICLETYPE", "VEHICLE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<VEHICLE>("TransportationDatabaseModel.FK_VEHICLE_VEHICLETYPE", "VEHICLE", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
